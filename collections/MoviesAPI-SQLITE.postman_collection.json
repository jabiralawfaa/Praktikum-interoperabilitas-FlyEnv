{
	"info": {
		"_postman_id": "26573bb5-6f10-4eb9-909e-1bff5b15affb",
		"name": "MoviesAPI-SQLITE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41787442"
	},
	"item": [
		{
			"name": "GET Directors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 200 OK\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Header Content-Type adalah application/json\", function() {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"})",
							"",
							"pm.test(\"Body respons adalah sebuah array\", function() {",
							"    const jsonData = pm.response.json().data;",
							"    pm.expect(jsonData).to.be.an('array');",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3300/directors",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"directors"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 200 OK\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Header Content-Type adalah application/json\", function() {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"})",
							"",
							"pm.test(\"Body respons adalah sebuah array\", function() {",
							"    const jsonData = pm.response.json().data;",
							"    pm.expect(jsonData).to.be.an('array');",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3300/movies",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Directors by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 200 OK\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Respons adalah objek dengan skema yang benar\", () => {",
							"    const jsonData = pm.response.json().data;",
							"    pm.expect(jsonData).to.be.an('object');",
							"    pm.expect(jsonData).to.have.all.keys('id','name','birthYear');",
							"})",
							"",
							"pm.test(\"Nilai ID di dalam respons sesuai dengan yang diminta\", () => {",
							"    const jsonData = pm.response.json().data;",
							"    pm.expect(jsonData.id).to.eql(1);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3300/directors/1",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"directors",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Movies by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 200 OK\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Respons adalah objek dengan skema yang benar\", () => {",
							"    const jsonData = pm.response.json().data;",
							"    pm.expect(jsonData).to.be.an('object');",
							"    pm.expect(jsonData).to.have.all.keys('id','title','director','year');",
							"})",
							"",
							"pm.test(\"Nilai ID di dalam respons sesuai dengan yang diminta\", () => {",
							"    const jsonData = pm.response.json().data;",
							"    pm.expect(jsonData.id).to.eql(1);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3300/movies/1",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"movies",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Directors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 201 Created\", () => {",
							"    pm.response.to.have.status(201);",
							"})",
							"",
							"pm.test(\"Respons berisi ID Film yang baru dibuat dan menyimpannya\", () => {",
							"    const jsonData = pm.response.json().data;",
							"    pm.expect(jsonData.id).to.be.a('number');",
							"",
							"    // menyimpan id ke variabel koleksi",
							"    pm.collectionVariables.set(\"CreateDirectorId\",jsonData.id)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "localhost:3300/directors?name=James Cameron&birthYear=1954",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"directors"
					],
					"query": [
						{
							"key": "name",
							"value": "James Cameron"
						},
						{
							"key": "birthYear",
							"value": "1954"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 201 Created\", () => {",
							"    pm.response.to.have.status(201);",
							"})",
							"",
							"pm.test(\"Respons berisi ID Film yang baru dibuat dan menyimpannya\", () => {",
							"    const jsonData = pm.response.json().data;",
							"    pm.expect(jsonData.id).to.be.a('number');",
							"",
							"    // menyimpan id ke variabel koleksi",
							"    pm.collectionVariables.set(\"CreateMovieId\",jsonData.id)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "localhost:3300/movies?title=Inception&director=Christopher Nolan&year=2010",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"movies"
					],
					"query": [
						{
							"key": "title",
							"value": "Inception"
						},
						{
							"key": "director",
							"value": "Christopher Nolan"
						},
						{
							"key": "year",
							"value": "2010"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Directors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:3300/directors/{{CreateDirectorId}}?name=Frank Darabont Updated&birthYear=1959",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"directors",
						"{{CreateDirectorId}}"
					],
					"query": [
						{
							"key": "name",
							"value": "Frank Darabont Updated"
						},
						{
							"key": "birthYear",
							"value": "1959"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:3300/movies/{{CreateMovieId}}?title=Inception&director=Christopher Nolan&year=2010",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"movies",
						"{{CreateMovieId}}"
					],
					"query": [
						{
							"key": "title",
							"value": "Inception"
						},
						{
							"key": "director",
							"value": "Christopher Nolan"
						},
						{
							"key": "year",
							"value": "2010"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Directors by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 200 No Content\", () => {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:3300/directors/{{CreateDirectorId}}",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"directors",
						"{{CreateDirectorId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Movies by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status respons adalah 200 No Content\", () => {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:3300/movies/{{CreateMovieId}}",
					"host": [
						"localhost"
					],
					"port": "3300",
					"path": [
						"movies",
						"{{CreateMovieId}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "CreateMovieId",
			"value": ""
		},
		{
			"key": "CreateDirectorId",
			"value": ""
		}
	]
}